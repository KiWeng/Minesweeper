{"version":3,"sources":["bomb.svg","Cell.js","Row.js","Field.js","Timer.js","Panel.js","App.js","index.js"],"names":["module","exports","Cell","props","handleContextmenu","bind","handleClick","state","value","cellState","cellClass","mineCount","this","cellClicked","rowPos","colPos","e","preventDefault","cellContextMenu","prevProps","setState","mine","className","onClick","onContextMenu","toString","React","Component","Row","listItems","i","length","push","createElement","rowStates","handleChange","mineInRow","Field","rowCount","colCount","updateMineStates","setUpMines","posState","j","isOver","isStart","flagCount","prevState","snapshot","doReset","minePos","type","updateGameStatus","tmp","revealSafeZone","move","queue","head","shift","moveKey","ni","nj","count","Set","size","add","Math","floor","random","mineKey","adjacentMineCount","Timer","startTime","currentTime","timerID","setInterval","tick","clearInterval","isEnded","Date","getTime","diff","minute","getMinutes","second","getSeconds","s","FlagCounter","Reset","style","cursor","handleReset","Panel","src","logo","alt","App","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0d58f9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.6153acdb.svg\";","import React from 'react'\r\nimport './Minesweeper.css'\r\n\r\nclass Cell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleContextmenu = this.handleContextmenu.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.state = {\r\n            value: this.props.cellState,\r\n            cellClass: \"cell\",\r\n            mineCount: 0\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.cellClicked(this.props.rowPos, this.props.colPos)\r\n    }\r\n\r\n    handleContextmenu(e) {\r\n        e.preventDefault();\r\n        this.props.cellContextMenu(this.props.rowPos, this.props.colPos)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // console.log(\"didUpdate\");\r\n        if (this.props.cellState !== prevProps.cellState) {\r\n            let value = this.state.value;\r\n            let cellClass;\r\n            if (value !== this.props.cellState) {\r\n                value = this.props.cellState;\r\n            }\r\n            if (value === 'opened') {\r\n                cellClass = 'cell opened'\r\n            } else if (value === 'flagged') {\r\n                cellClass = 'cell flagged'\r\n            } else if (value === 'bombed') {\r\n                cellClass = 'cell bombed'\r\n            } else {\r\n                cellClass = 'cell'\r\n            }\r\n            this.setState({\r\n                value: value,\r\n                cellClass: cellClass,\r\n                mineCount: this.props.mine\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className={this.state.cellClass}\r\n                onClick={this.handleClick}\r\n                onContextMenu={this.handleContextmenu}\r\n            >\r\n                <span className={\"mine-text-\" + this.state.value}>\r\n                    {this.state.mineCount !== 0 ? this.state.mineCount.toString() : ''}\r\n                </span>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Cell\r\n","import React from 'react'\r\nimport Cell from \"./Cell\";\r\n\r\nfunction Row(props) {\r\n\r\n    const listItems = []\r\n    for (let i = 0; i < props.length; i++) {\r\n\r\n        listItems.push(React.createElement(Cell, {\r\n                rowPos: props.rowPos,\r\n                colPos: i,\r\n                cellState: props.rowStates[i],\r\n                handleChange: props.handleChange,\r\n                cellClicked: props.cellClicked,\r\n                cellContextMenu: props.cellContextMenu,\r\n                mine: props.mineInRow[i]\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                listItems\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport Row from \"./Row\";\r\n\r\n\r\nclass Field extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.rowCount = 9;\r\n        this.colCount = 8\r\n        this.updateMineStates = this.updateMineStates.bind(this)\r\n        this.cellClicked = this.cellClicked.bind(this)\r\n        this.cellContextMenu = this.cellContextMenu.bind(this)\r\n        this.setUpMines();\r\n        let posState = []\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            posState.push([])\r\n            for (let j = 0; j < this.colCount; j++) {\r\n                posState[i].push(\"closed\")\r\n            }\r\n        }\r\n        this.state = {state: posState, isOver: false, isStart: false}\r\n        this.flagCount = 10;\r\n        this.mineCount = 10;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.doReset) {\r\n            this.setUpMines();\r\n            let posState = []\r\n            for (let i = 0; i < this.rowCount; i++) {\r\n                posState.push([])\r\n                for (let j = 0; j < this.colCount; j++) {\r\n                    posState[i].push(\"closed\")\r\n                }\r\n            }\r\n            this.setState({state: posState, isOver: false, isStart: false})\r\n            this.flagCount = 10;\r\n            this.mineCount = 10;\r\n        }\r\n    }\r\n\r\n    cellClicked(i, j) {\r\n        // console.log(i, j);\r\n        if (this.state.isStart === false) {\r\n            while (this.minePos[i][j] === -1) {\r\n                this.setUpMines();\r\n            }\r\n            this.setState({isStart: true})\r\n        }\r\n\r\n        if (this.state.state[i][j] === 'opened') {\r\n            return\r\n        }\r\n        if (this.minePos[i][j] !== -1) {\r\n            this.updateMineStates(i, j, \"opened\")\r\n        } else if (this.minePos[i][j] === -1) {\r\n            this.updateMineStates(i, j, \"bombed\")\r\n\r\n        }\r\n    }\r\n\r\n    cellContextMenu(i, j) {\r\n        if (this.state.state[i][j] === 'closed' && this.props.flagCount) {\r\n            this.updateMineStates(i, j, 'flagged')\r\n        } else if (this.state.state[i][j] === 'flagged') {\r\n            this.updateMineStates(i, j, 'closed')\r\n        }\r\n    }\r\n\r\n    //TODO: this method needs a serious clean up\r\n    updateMineStates(i, j, type) {\r\n        if (this.state.isOver === true)\r\n            return;\r\n        if (this.state.state[i][j] === 'flagged' && type === 'opened') {\r\n            this.props.updateGameStatus(false, this.props.flagCount + 1)\r\n        }\r\n        let tmp = this.state.state;\r\n        tmp[i][j] = type;\r\n        this.setState({state: tmp})\r\n        if (type === \"opened\") {\r\n            if (this.minePos[i][j] === 0) {\r\n                this.revealSafeZone(i, j)\r\n            }\r\n            this.props.updateGameStatus(false, this.props.flagCount)\r\n        }\r\n        if (type === \"flagged\") {\r\n            this.props.updateGameStatus(false, this.props.flagCount - 1)\r\n            if (this.minePos[i][j] === -1) {\r\n                if (++this.mineCount === 10) {\r\n                    this.props.updateGameStatus(true, this.props.flagCount)\r\n                    this.setState({isOver: true})\r\n                }\r\n            }\r\n        }\r\n        if (type === \"closed\") {\r\n            this.props.updateGameStatus(false, this.props.flagCount + 1)\r\n        }\r\n        if (type === \"bombed\") {\r\n            this.props.updateGameStatus(true, this.props.flagCount)\r\n            this.setState({isOver: true})\r\n            let tmp = this.state.state;\r\n            for (i in this.minePos) {\r\n                for (j in this.minePos[i]) {\r\n                    if (this.minePos[i][j] === -1) {\r\n                        tmp[i][j] = 'bombed'\r\n                    }\r\n                }\r\n            }\r\n            this.setState({state: tmp})\r\n        }\r\n    }\r\n\r\n    revealSafeZone(i, j) {\r\n        let move = [\r\n            [-1, -1], [0, -1], [1, -1], [-1, 0], [1, 0], [-1, 1], [0, 1], [1, 1]\r\n        ]\r\n        let queue = [];\r\n        queue.push([i, j])\r\n        let tmp = this.state.state;\r\n        while (queue.length > 0) {\r\n            let head = queue[0]\r\n            queue.shift()\r\n            for (const moveKey of move) {\r\n                let ni = moveKey[0] + head[0]\r\n                let nj = moveKey[1] + head[1]\r\n                if (ni < 0 || ni >= this.rowCount)\r\n                    continue\r\n                if (nj < 0 || nj >= this.colCount)\r\n                    continue\r\n                if (this.minePos[ni][nj] < 0)\r\n                    continue\r\n                if (tmp[ni][nj] === \"closed\") {\r\n                    tmp[ni][nj] = \"opened\";\r\n                    if (this.minePos[ni][nj] === 0) {\r\n                        queue.push([ni, nj])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({state: tmp})\r\n    }\r\n\r\n    adjacentMineCount(i, j) {\r\n        if (this.minePos[i][j] === -1)\r\n            return -1\r\n        let count = 0;\r\n        let move = [\r\n            [-1, -1], [0, -1], [1, -1], [-1, 0], [1, 0], [-1, 1], [0, 1], [1, 1]\r\n        ]\r\n        for (const moveKey of move) {\r\n            let ni = moveKey[0] + i\r\n            let nj = moveKey[1] + j\r\n            if (ni < 0 || ni >= this.rowCount)\r\n                continue\r\n            if (nj < 0 || nj >= this.colCount)\r\n                continue\r\n            count += (this.minePos[ni][nj] === -1)\r\n        }\r\n\r\n        return count\r\n    }\r\n\r\n    setUpMines() {\r\n        this.minePos = []\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            this.minePos.push([])\r\n            for (let j = 0; j < this.colCount; j++) {\r\n                this.minePos[i].push(0)\r\n            }\r\n        }\r\n\r\n        let mine = new Set()\r\n        while (mine.size < 10) {\r\n            mine.add(Math.floor(\r\n                Math.random() * this.colCount * this.rowCount\r\n            ))\r\n        }\r\n\r\n        for (const mineKey of mine) {\r\n            this.minePos[Math.floor(mineKey / this.colCount)][mineKey % this.colCount]\r\n                = -1;\r\n        }\r\n\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            for (let j = 0; j < this.colCount; j++) {\r\n                this.minePos[i][j] = this.adjacentMineCount(i, j)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let listItems = []\r\n        // console.log(this.minePos[0][0]);\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            // console.log(\"updating\");\r\n            listItems.push(Row({\r\n                    length: this.colCount,\r\n                    rowPos: i,\r\n                    cellClicked: this.cellClicked,\r\n                    rowStates: this.state.state[i],\r\n                    cellContextMenu: this.cellContextMenu,\r\n                    mineInRow: this.minePos[i]\r\n                })\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"field\">\r\n                {\r\n                    listItems\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Field","import React from 'react'\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {startTime: 0, currentTime: 0}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            50\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    tick() {\r\n        if (!this.props.isEnded) {\r\n            if (this.state.startTime === 0) {\r\n                this.setState({\r\n                    startTime: new Date().getTime()\r\n                })\r\n            }\r\n            this.setState({\r\n                currentTime: new Date().getTime()\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.doReset) {\r\n            this.setState({startTime: 0, currentTime: 0})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let diff = this.state.currentTime - this.state.startTime\r\n        let minute = new Date(diff).getMinutes();\r\n        let second = new Date(diff).getSeconds()\r\n        let s = \"\";\r\n        if (second < 10) {\r\n            s = \"0\"\r\n        }\r\n        return (\r\n            <span className=\"Timer\">{minute}:{s + second}</span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer\r\n","import React from \"react\";\r\nimport logo from \"./bomb.svg\";\r\nimport Timer from \"./Timer\";\r\n\r\nfunction FlagCounter(props) {\r\n    return (\r\n        <p>{props.flagCount}</p>\r\n    )\r\n}\r\n\r\nfunction Reset(props) {\r\n    return (\r\n        <button\r\n            style={{cursor: \"pointer\"}}\r\n            onClick={props.handleReset}\r\n        >reset</button>\r\n    )\r\n}\r\n\r\nclass Panel extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.doReset !== prevProps.doReset) {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                   <span className=\"title\">\r\n                   Minesweeper\r\n                   </span>\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                </div>\r\n                <div>\r\n                    <FlagCounter flagCount={this.props.flagCount}/>\r\n                    <Reset handleReset={this.props.handleReset}/>\r\n                    <Timer\r\n                        isEnded={this.props.isEnded}\r\n                        doReset={this.props.doReset}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Panel","import React from 'react';\nimport './App.css';\nimport './Minesweeper.css'\nimport Field from \"./Field\";\nimport Panel from \"./Panel\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {flagCount: 10, isEnded: true, doReset: false}\n        this.updateGameStatus = this.updateGameStatus.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n    }\n\n    updateGameStatus(isEnded, flagCount) {\n        this.setState({flagCount: flagCount, isEnded: isEnded, doReset: false});\n    }\n\n    handleReset() {\n        this.setState({flagCount: 10, isEnded: true, doReset: true})\n    }\n\n    componentDidUpdate() {\n        if (this.state.doReset)\n            this.setState({doReset: false})\n    }\n\n    render() {\n        console.log(this.state.doReset);\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Panel\n                        isEnded={this.state.isEnded}\n                        flagCount={this.state.flagCount}\n                        handleReset={this.handleReset}\n                        doReset={this.state.doReset}\n                    />\n                    <Field\n                        updateGameStatus={this.updateGameStatus}\n                        flagCount={this.state.flagCount}\n                        doReset={this.state.doReset}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}