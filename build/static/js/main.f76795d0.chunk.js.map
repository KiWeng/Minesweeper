{"version":3,"sources":["bomb.svg","Cell.js","Row.js","Field.js","Timer.js","Panel.js","App.js","index.js"],"names":["module","exports","Cell","props","handleContextmenu","bind","handleClick","state","value","cellState","cellClass","mineCount","this","cellClicked","rowPos","colPos","e","preventDefault","cellContextMenu","prevProps","setState","mine","className","onClick","onContextMenu","toString","React","Component","Row","listItems","i","length","push","createElement","rowStates","handleChange","mineInRow","Field","rowCount","colCount","updateMineStates","setUpMines","posState","j","isOver","isStart","flagCount","prevState","snapshot","doReset","minePos","type","updateGameStatus","tmp","revealSafeZone","move","queue","head","shift","moveKey","ni","nj","count","Set","size","add","Math","floor","random","mineKey","adjacentMineCount","Timer","startTime","currentTime","timerID","setInterval","tick","clearInterval","isEnded","Date","getTime","diff","minute","getMinutes","second","getSeconds","s","title","style","color","valueStyle","Panel","padding","gutter","span","src","logo","alt","prefix","LikeOutlined","shape","handleReset","width","App","console","log","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,kC,+NCmE5BC,G,wDA9DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,MAAQ,CACTC,MAAO,EAAKL,MAAMM,UAClBC,UAAW,OACXC,UAAW,GAPA,E,0DAYfC,KAAKT,MAAMU,YAAYD,KAAKT,MAAMW,OAAQF,KAAKT,MAAMY,U,wCAGvCC,GACdA,EAAEC,iBACFL,KAAKT,MAAMe,gBAAgBN,KAAKT,MAAMW,OAAQF,KAAKT,MAAMY,U,yCAG1CI,GAEf,GAAIP,KAAKT,MAAMM,YAAcU,EAAUV,UAAW,CAC9C,IACIC,EADAF,EAAQI,KAAKL,MAAMC,MAEnBA,IAAUI,KAAKT,MAAMM,YACrBD,EAAQI,KAAKT,MAAMM,WAGnBC,EADU,WAAVF,EACY,cACK,YAAVA,EACK,eACK,WAAVA,EACK,cAEA,OAEhBI,KAAKQ,SAAS,CACVZ,MAAOA,EACPE,UAAWA,EACXC,UAAWC,KAAKT,MAAMkB,U,+BAO9B,OACI,4BACIC,UAAWV,KAAKL,MAAMG,UACtBa,QAASX,KAAKN,YACdkB,cAAeZ,KAAKR,mBAEpB,0BAAMkB,UAAW,aAAeV,KAAKL,MAAMC,OACb,IAAzBI,KAAKL,MAAMI,UAAkBC,KAAKL,MAAMI,UAAUc,WAAa,S,GAvDjEC,IAAMC,YC2BVC,MA3Bf,SAAazB,GAGT,IADA,IAAM0B,EAAY,GACTC,EAAI,EAAGA,EAAI3B,EAAM4B,OAAQD,IAE9BD,EAAUG,KAAKN,IAAMO,cAAc/B,EAAM,CACjCY,OAAQX,EAAMW,OACdC,OAAQe,EACRrB,UAAWN,EAAM+B,UAAUJ,GAC3BK,aAAchC,EAAMgC,aACpBtB,YAAaV,EAAMU,YACnBK,gBAAiBf,EAAMe,gBACvBG,KAAMlB,EAAMiC,UAAUN,MAKlC,OACI,yBAAKR,UAAU,OAEPO,ICgMDQ,E,kDAlNX,WAAYlC,GAAQ,IAAD,uBACf,cAAMA,IACDmC,SAAW,EAChB,EAAKC,SAAW,EAChB,EAAKC,iBAAmB,EAAKA,iBAAiBnC,KAAtB,gBACxB,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBACnB,EAAKa,gBAAkB,EAAKA,gBAAgBb,KAArB,gBACvB,EAAKoC,aAEL,IADA,IAAIC,EAAW,GACNZ,EAAI,EAAGA,EAAI,EAAKQ,SAAUR,IAAK,CACpCY,EAASV,KAAK,IACd,IAAK,IAAIW,EAAI,EAAGA,EAAI,EAAKJ,SAAUI,IAC/BD,EAASZ,GAAGE,KAAK,UAZV,OAef,EAAKzB,MAAQ,CAACA,MAAOmC,EAAUE,QAAQ,EAAOC,SAAS,GACvD,EAAKC,UAAY,GACjB,EAAKnC,UAAY,GAjBF,E,+DAoBAQ,EAAW4B,EAAWC,GACrC,GAAIpC,KAAKT,MAAM8C,QAAS,CACpBrC,KAAK6B,aAEL,IADA,IAAIC,EAAW,GACNZ,EAAI,EAAGA,EAAIlB,KAAK0B,SAAUR,IAAK,CACpCY,EAASV,KAAK,IACd,IAAK,IAAIW,EAAI,EAAGA,EAAI/B,KAAK2B,SAAUI,IAC/BD,EAASZ,GAAGE,KAAK,UAGzBpB,KAAKQ,SAAS,CAACb,MAAOmC,EAAUE,QAAQ,EAAOC,SAAS,IACxDjC,KAAKkC,UAAY,GACjBlC,KAAKD,UAAY,M,kCAIbmB,EAAGa,GAEX,IAA2B,IAAvB/B,KAAKL,MAAMsC,QAAmB,CAC9B,MAA+B,IAAxBjC,KAAKsC,QAAQpB,GAAGa,IACnB/B,KAAK6B,aAET7B,KAAKQ,SAAS,CAACyB,SAAS,IAGG,WAA3BjC,KAAKL,MAAMA,MAAMuB,GAAGa,MAGI,IAAxB/B,KAAKsC,QAAQpB,GAAGa,GAChB/B,KAAK4B,iBAAiBV,EAAGa,EAAG,WACG,IAAxB/B,KAAKsC,QAAQpB,GAAGa,IACvB/B,KAAK4B,iBAAiBV,EAAGa,EAAG,a,sCAKpBb,EAAGa,GACgB,WAA3B/B,KAAKL,MAAMA,MAAMuB,GAAGa,IAAmB/B,KAAKT,MAAM2C,UAClDlC,KAAK4B,iBAAiBV,EAAGa,EAAG,WACM,YAA3B/B,KAAKL,MAAMA,MAAMuB,GAAGa,IAC3B/B,KAAK4B,iBAAiBV,EAAGa,EAAG,Y,uCAKnBb,EAAGa,EAAGQ,GACnB,IAA0B,IAAtBvC,KAAKL,MAAMqC,OAAf,CAE+B,YAA3BhC,KAAKL,MAAMA,MAAMuB,GAAGa,IAA6B,WAATQ,GACxCvC,KAAKT,MAAMiD,kBAAiB,EAAOxC,KAAKT,MAAM2C,UAAY,GAE9D,IAAIO,EAAMzC,KAAKL,MAAMA,MAqBrB,GApBA8C,EAAIvB,GAAGa,GAAKQ,EACZvC,KAAKQ,SAAS,CAACb,MAAO8C,IACT,WAATF,IAC2B,IAAvBvC,KAAKsC,QAAQpB,GAAGa,IAChB/B,KAAK0C,eAAexB,EAAGa,GAE3B/B,KAAKT,MAAMiD,kBAAiB,EAAOxC,KAAKT,MAAM2C,YAErC,YAATK,IACAvC,KAAKT,MAAMiD,kBAAiB,EAAOxC,KAAKT,MAAM2C,UAAY,IAC9B,IAAxBlC,KAAKsC,QAAQpB,GAAGa,IACS,OAAnB/B,KAAKD,YACPC,KAAKT,MAAMiD,kBAAiB,EAAMxC,KAAKT,MAAM2C,WAC7ClC,KAAKQ,SAAS,CAACwB,QAAQ,MAItB,WAATO,GACAvC,KAAKT,MAAMiD,kBAAiB,EAAOxC,KAAKT,MAAM2C,UAAY,GAEjD,WAATK,EAAmB,CACnBvC,KAAKT,MAAMiD,kBAAiB,EAAMxC,KAAKT,MAAM2C,WAC7ClC,KAAKQ,SAAS,CAACwB,QAAQ,IACvB,IAAIS,EAAMzC,KAAKL,MAAMA,MACrB,IAAKuB,KAAKlB,KAAKsC,QACX,IAAKP,KAAK/B,KAAKsC,QAAQpB,IACS,IAAxBlB,KAAKsC,QAAQpB,GAAGa,KAChBU,EAAIvB,GAAGa,GAAK,UAIxB/B,KAAKQ,SAAS,CAACb,MAAO8C,Q,qCAIfvB,EAAGa,GACd,IAAIY,EAAO,CACP,EAAE,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAElEC,EAAQ,GACZA,EAAMxB,KAAK,CAACF,EAAGa,IAEf,IADA,IAAIU,EAAMzC,KAAKL,MAAMA,MACdiD,EAAMzB,OAAS,GAAG,CACrB,IAAI0B,EAAOD,EAAM,GACjBA,EAAME,QAFe,oBAGCH,GAHD,IAGrB,2BAA4B,CAAC,IAAlBI,EAAiB,QACpBC,EAAKD,EAAQ,GAAKF,EAAK,GACvBI,EAAKF,EAAQ,GAAKF,EAAK,GACvBG,EAAK,GAAKA,GAAMhD,KAAK0B,WAErBuB,EAAK,GAAKA,GAAMjD,KAAK2B,UAErB3B,KAAKsC,QAAQU,GAAIC,GAAM,GAEP,WAAhBR,EAAIO,GAAIC,KACRR,EAAIO,GAAIC,GAAM,SACe,IAAzBjD,KAAKsC,QAAQU,GAAIC,IACjBL,EAAMxB,KAAK,CAAC4B,EAAIC,OAfP,+BAoBzBjD,KAAKQ,SAAS,CAACb,MAAO8C,M,wCAGRvB,EAAGa,GACjB,IAA4B,IAAxB/B,KAAKsC,QAAQpB,GAAGa,GAChB,OAAQ,EAKZ,IAJA,IAAImB,EAAQ,EAIZ,MAHW,CACP,EAAE,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAEtE,eAA4B,CAAvB,IAAMH,EAAO,KACVC,EAAKD,EAAQ,GAAK7B,EAClB+B,EAAKF,EAAQ,GAAKhB,EAClBiB,EAAK,GAAKA,GAAMhD,KAAK0B,WAErBuB,EAAK,GAAKA,GAAMjD,KAAK2B,WAEzBuB,IAAoC,IAA1BlD,KAAKsC,QAAQU,GAAIC,KAG/B,OAAOC,I,mCAIPlD,KAAKsC,QAAU,GACf,IAAK,IAAIpB,EAAI,EAAGA,EAAIlB,KAAK0B,SAAUR,IAAK,CACpClB,KAAKsC,QAAQlB,KAAK,IAClB,IAAK,IAAIW,EAAI,EAAGA,EAAI/B,KAAK2B,SAAUI,IAC/B/B,KAAKsC,QAAQpB,GAAGE,KAAK,GAK7B,IADA,IAAIX,EAAO,IAAI0C,IACR1C,EAAK2C,KAAO,IACf3C,EAAK4C,IAAIC,KAAKC,MACVD,KAAKE,SAAWxD,KAAK2B,SAAW3B,KAAK0B,WAZpC,oBAgBajB,GAhBb,IAgBT,2BAA4B,CAAC,IAAlBgD,EAAiB,QACxBzD,KAAKsC,QAAQgB,KAAKC,MAAME,EAAUzD,KAAK2B,WAAW8B,EAAUzD,KAAK2B,WAC1D,GAlBF,8BAqBT,IAAK,IAAIT,EAAI,EAAGA,EAAIlB,KAAK0B,SAAUR,IAC/B,IAAK,IAAIa,EAAI,EAAGA,EAAI/B,KAAK2B,SAAUI,IAC/B/B,KAAKsC,QAAQpB,GAAGa,GAAK/B,KAAK0D,kBAAkBxC,EAAGa,K,+BAQvD,IAFA,IAAId,EAAY,GAEPC,EAAI,EAAGA,EAAIlB,KAAK0B,SAAUR,IAE/BD,EAAUG,KAAKJ,EAAI,CACXG,OAAQnB,KAAK2B,SACbzB,OAAQgB,EACRjB,YAAaD,KAAKC,YAClBqB,UAAWtB,KAAKL,MAAMA,MAAMuB,GAC5BZ,gBAAiBN,KAAKM,gBACtBkB,UAAWxB,KAAKsC,QAAQpB,MAIpC,OACI,yBAAKR,UAAU,SAEPO,O,GA5MAH,IAAMC,W,yBCoDX4C,E,kDArDX,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CAACiE,UAAW,EAAGC,YAAa,GAF1B,E,gEAKE,IAAD,OAChB7D,KAAK8D,QAAUC,aACX,kBAAM,EAAKC,SACX,M,6CAKJC,cAAcjE,KAAK8D,W,6BAId9D,KAAKT,MAAM2E,UACiB,IAAzBlE,KAAKL,MAAMiE,WACX5D,KAAKQ,SAAS,CACVoD,WAAW,IAAIO,MAAOC,YAG9BpE,KAAKQ,SAAS,CACVqD,aAAa,IAAIM,MAAOC,e,yCAKjB7D,EAAW4B,EAAWC,GACjCpC,KAAKT,MAAM8C,SACXrC,KAAKQ,SAAS,CAACoD,UAAW,EAAGC,YAAa,M,+BAK9C,IAAIQ,EAAOrE,KAAKL,MAAMkE,YAAc7D,KAAKL,MAAMiE,UAC3CU,EAAS,IAAIH,KAAKE,GAAME,aACxBC,EAAS,IAAIL,KAAKE,GAAMI,aACxBC,EAAI,GAIR,OAHIF,EAAS,KACTE,EAAI,KAGJ,kBAAC,IAAD,CACIC,MAAO,yBAAKC,MAAO,CAAEC,MAAO,UAArB,SACPC,WAAY,CAACD,MAAO,SACpBjF,MAAY0E,EAAS,IAAMI,EAAIF,Q,GAhD3B1D,IAAMC,W,gCC4CXgE,E,uKAvCX,OACE,yBAAKH,MAAO,CACVI,QAAS,OAET,kBAAC,IAAD,CAAKC,OAAQ,CAAC,EAAG,KACf,kBAAC,IAAD,CAAKC,KAAM,IACT,yBAAKxE,UAAU,SAAf,cAEE,yBAAKyE,IAAKC,IAAM1E,UAAU,WAAW2E,IAAI,WAG7C,kBAAC,IAAD,CAAKH,KAAM,IACT,kBAAC,IAAD,CACEP,MAAO,yBAAKC,MAAO,CAAEC,MAAO,UAArB,gBACPjF,MAAOI,KAAKT,MAAM2C,UAClBoD,OAAQ,kBAACC,EAAA,EAAD,MACRT,WAAY,CAAED,MAAO,YAGzB,kBAAC,IAAD,CAAKK,KAAM,IACT,kBAAC,EAAD,CACEhB,QAASlE,KAAKT,MAAM2E,QACpB7B,QAASrC,KAAKT,MAAM8C,WAGxB,kBAAC,IAAD,CAAK6C,KAAM,IACP,kBAAC,IAAD,CAAQ3C,KAAK,UAAUiD,MAAM,QAAQpC,KAAK,QAClCzC,QAASX,KAAKT,MAAMkG,YACpBb,MAAO,CAAEc,MAAO,UAFxB,gB,GA5BM5E,IAAMC,WCgDX4E,E,kDA9CX,WAAYpG,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CAACuC,UAAW,GAAIgC,SAAS,EAAM7B,SAAS,GACrD,EAAKG,iBAAmB,EAAKA,iBAAiB/C,KAAtB,gBACxB,EAAKgG,YAAc,EAAKA,YAAYhG,KAAjB,gBAJJ,E,6DAOFyE,EAAShC,GACtBlC,KAAKQ,SAAS,CAAC0B,UAAWA,EAAWgC,QAASA,EAAS7B,SAAS,M,oCAIhErC,KAAKQ,SAAS,CAAC0B,UAAW,GAAIgC,SAAS,EAAM7B,SAAS,M,2CAIlDrC,KAAKL,MAAM0C,SACXrC,KAAKQ,SAAS,CAAC6B,SAAS,M,+BAK5B,OADAuD,QAAQC,IAAI7F,KAAKL,MAAM0C,SAEnB,yBAAK3B,UAAU,OACX,4BAAQA,UAAU,cACtB,yBACYkE,MAAO,CAACkB,OAAQ,SAEpB,kBAAC,EAAD,CACI5B,QAASlE,KAAKL,MAAMuE,QACpBhC,UAAWlC,KAAKL,MAAMuC,UACtBuD,YAAazF,KAAKyF,YAClBpD,QAASrC,KAAKL,MAAM0C,WAGxB,kBAAC,EAAD,CACIG,iBAAkBxC,KAAKwC,iBACvBN,UAAWlC,KAAKL,MAAMuC,UACtBG,QAASrC,KAAKL,MAAM0C,gB,GAvC1BvB,IAAMC,WCFxBgF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f76795d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.15d6d6ee.svg\";","import React from 'react'\nimport './Minesweeper.css'\nimport 'antd/dist/antd.css'\n\nclass Cell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleContextmenu = this.handleContextmenu.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        this.state = {\n            value: this.props.cellState,\n            cellClass: \"cell\",\n            mineCount: 0\n        }\n    }\n\n    handleClick() {\n        this.props.cellClicked(this.props.rowPos, this.props.colPos)\n    }\n\n    handleContextmenu(e) {\n        e.preventDefault();\n        this.props.cellContextMenu(this.props.rowPos, this.props.colPos)\n    }\n\n    componentDidUpdate(prevProps) {\n        // console.log(\"didUpdate\");\n        if (this.props.cellState !== prevProps.cellState) {\n            let value = this.state.value;\n            let cellClass;\n            if (value !== this.props.cellState) {\n                value = this.props.cellState;\n            }\n            if (value === 'opened') {\n                cellClass = 'cell opened'\n            } else if (value === 'flagged') {\n                cellClass = 'cell flagged'\n            } else if (value === 'bombed') {\n                cellClass = 'cell bombed'\n            } else {\n                cellClass = 'cell'\n            }\n            this.setState({\n                value: value,\n                cellClass: cellClass,\n                mineCount: this.props.mine\n            });\n        }\n    }\n\n\n    render() {\n        return (\n            <button\n                className={this.state.cellClass}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextmenu}\n            >\n                <span className={\"mine-text-\" + this.state.value}>\n                    {this.state.mineCount !== 0 ? this.state.mineCount.toString() : ''}\n                </span>\n            </button>\n        )\n    }\n}\n\n\nexport default Cell\n","import React from 'react'\nimport Cell from \"./Cell\";\nimport 'antd/dist/antd.css'\n\nfunction Row(props) {\n\n    const listItems = []\n    for (let i = 0; i < props.length; i++) {\n\n        listItems.push(React.createElement(Cell, {\n                rowPos: props.rowPos,\n                colPos: i,\n                cellState: props.rowStates[i],\n                handleChange: props.handleChange,\n                cellClicked: props.cellClicked,\n                cellContextMenu: props.cellContextMenu,\n                mine: props.mineInRow[i]\n            })\n        )\n    }\n\n    return (\n        <div className=\"row\">\n            {\n                listItems\n            }\n        </div>\n    )\n}\n\n\nexport default Row\n","import React from 'react'\nimport Row from \"./Row\";\nimport 'antd/dist/antd.css'\n\n\nclass Field extends React.Component {\n    constructor(props) {\n        super(props)\n        this.rowCount = 9;\n        this.colCount = 8\n        this.updateMineStates = this.updateMineStates.bind(this)\n        this.cellClicked = this.cellClicked.bind(this)\n        this.cellContextMenu = this.cellContextMenu.bind(this)\n        this.setUpMines();\n        let posState = []\n        for (let i = 0; i < this.rowCount; i++) {\n            posState.push([])\n            for (let j = 0; j < this.colCount; j++) {\n                posState[i].push(\"closed\")\n            }\n        }\n        this.state = {state: posState, isOver: false, isStart: false}\n        this.flagCount = 10;\n        this.mineCount = 10;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.doReset) {\n            this.setUpMines();\n            let posState = []\n            for (let i = 0; i < this.rowCount; i++) {\n                posState.push([])\n                for (let j = 0; j < this.colCount; j++) {\n                    posState[i].push(\"closed\")\n                }\n            }\n            this.setState({state: posState, isOver: false, isStart: false})\n            this.flagCount = 10;\n            this.mineCount = 10;\n        }\n    }\n\n    cellClicked(i, j) {\n        // console.log(i, j);\n        if (this.state.isStart === false) {\n            while (this.minePos[i][j] === -1) {\n                this.setUpMines();\n            }\n            this.setState({isStart: true})\n        }\n\n        if (this.state.state[i][j] === 'opened') {\n            return\n        }\n        if (this.minePos[i][j] !== -1) {\n            this.updateMineStates(i, j, \"opened\")\n        } else if (this.minePos[i][j] === -1) {\n            this.updateMineStates(i, j, \"bombed\")\n\n        }\n    }\n\n    cellContextMenu(i, j) {\n        if (this.state.state[i][j] === 'closed' && this.props.flagCount) {\n            this.updateMineStates(i, j, 'flagged')\n        } else if (this.state.state[i][j] === 'flagged') {\n            this.updateMineStates(i, j, 'closed')\n        }\n    }\n\n    //TODO: this method needs a serious clean up\n    updateMineStates(i, j, type) {\n        if (this.state.isOver === true)\n            return;\n        if (this.state.state[i][j] === 'flagged' && type === 'opened') {\n            this.props.updateGameStatus(false, this.props.flagCount + 1)\n        }\n        let tmp = this.state.state;\n        tmp[i][j] = type;\n        this.setState({state: tmp})\n        if (type === \"opened\") {\n            if (this.minePos[i][j] === 0) {\n                this.revealSafeZone(i, j)\n            }\n            this.props.updateGameStatus(false, this.props.flagCount)\n        }\n        if (type === \"flagged\") {\n            this.props.updateGameStatus(false, this.props.flagCount - 1)\n            if (this.minePos[i][j] === -1) {\n                if (++this.mineCount === 10) {\n                    this.props.updateGameStatus(true, this.props.flagCount)\n                    this.setState({isOver: true})\n                }\n            }\n        }\n        if (type === \"closed\") {\n            this.props.updateGameStatus(false, this.props.flagCount + 1)\n        }\n        if (type === \"bombed\") {\n            this.props.updateGameStatus(true, this.props.flagCount)\n            this.setState({isOver: true})\n            let tmp = this.state.state;\n            for (i in this.minePos) {\n                for (j in this.minePos[i]) {\n                    if (this.minePos[i][j] === -1) {\n                        tmp[i][j] = 'bombed'\n                    }\n                }\n            }\n            this.setState({state: tmp})\n        }\n    }\n\n    revealSafeZone(i, j) {\n        let move = [\n            [-1, -1], [0, -1], [1, -1], [-1, 0], [1, 0], [-1, 1], [0, 1], [1, 1]\n        ]\n        let queue = [];\n        queue.push([i, j])\n        let tmp = this.state.state;\n        while (queue.length > 0) {\n            let head = queue[0]\n            queue.shift()\n            for (const moveKey of move) {\n                let ni = moveKey[0] + head[0]\n                let nj = moveKey[1] + head[1]\n                if (ni < 0 || ni >= this.rowCount)\n                    continue\n                if (nj < 0 || nj >= this.colCount)\n                    continue\n                if (this.minePos[ni][nj] < 0)\n                    continue\n                if (tmp[ni][nj] === \"closed\") {\n                    tmp[ni][nj] = \"opened\";\n                    if (this.minePos[ni][nj] === 0) {\n                        queue.push([ni, nj])\n                    }\n                }\n            }\n        }\n        this.setState({state: tmp})\n    }\n\n    adjacentMineCount(i, j) {\n        if (this.minePos[i][j] === -1)\n            return -1\n        let count = 0;\n        let move = [\n            [-1, -1], [0, -1], [1, -1], [-1, 0], [1, 0], [-1, 1], [0, 1], [1, 1]\n        ]\n        for (const moveKey of move) {\n            let ni = moveKey[0] + i\n            let nj = moveKey[1] + j\n            if (ni < 0 || ni >= this.rowCount)\n                continue\n            if (nj < 0 || nj >= this.colCount)\n                continue\n            count += (this.minePos[ni][nj] === -1)\n        }\n\n        return count\n    }\n\n    setUpMines() {\n        this.minePos = []\n        for (let i = 0; i < this.rowCount; i++) {\n            this.minePos.push([])\n            for (let j = 0; j < this.colCount; j++) {\n                this.minePos[i].push(0)\n            }\n        }\n\n        let mine = new Set()\n        while (mine.size < 10) {\n            mine.add(Math.floor(\n                Math.random() * this.colCount * this.rowCount\n            ))\n        }\n\n        for (const mineKey of mine) {\n            this.minePos[Math.floor(mineKey / this.colCount)][mineKey % this.colCount]\n                = -1;\n        }\n\n        for (let i = 0; i < this.rowCount; i++) {\n            for (let j = 0; j < this.colCount; j++) {\n                this.minePos[i][j] = this.adjacentMineCount(i, j)\n            }\n        }\n    }\n\n    render() {\n        let listItems = []\n        // console.log(this.minePos[0][0]);\n        for (let i = 0; i < this.rowCount; i++) {\n            // console.log(\"updating\");\n            listItems.push(Row({\n                    length: this.colCount,\n                    rowPos: i,\n                    cellClicked: this.cellClicked,\n                    rowStates: this.state.state[i],\n                    cellContextMenu: this.cellContextMenu,\n                    mineInRow: this.minePos[i]\n                })\n            )\n        }\n        return (\n            <div className=\"field\">\n                {\n                    listItems\n                }\n            </div>\n        )\n    }\n}\n\nexport default Field\n","import React from 'react'\nimport { Statistic } from 'antd'\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {startTime: 0, currentTime: 0}\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            50\n        )\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID)\n    }\n\n    tick() {\n        if (!this.props.isEnded) {\n            if (this.state.startTime === 0) {\n                this.setState({\n                    startTime: new Date().getTime()\n                })\n            }\n            this.setState({\n                currentTime: new Date().getTime()\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.doReset) {\n            this.setState({startTime: 0, currentTime: 0})\n        }\n    }\n\n    render() {\n        let diff = this.state.currentTime - this.state.startTime\n        let minute = new Date(diff).getMinutes();\n        let second = new Date(diff).getSeconds()\n        let s = \"\";\n        if (second < 10) {\n            s = \"0\"\n        }\n        return (\n            <Statistic\n                title={<div style={{ color: 'white'}}>Timer</div>}\n                valueStyle={{color: 'white'}}\n                value={'' + minute + ':' + s + second}\n            />\n        );\n    }\n}\n\nexport default Timer\n","import React from \"react\";\nimport logo from \"./bomb.svg\";\nimport Timer from \"./Timer\";\nimport {Button, Col, Row, Statistic} from 'antd';\nimport { LikeOutlined } from '@ant-design/icons';\n\nclass Panel extends React.Component {\n  render() {\n    return (\n      <div style={{\n        padding: '16',\n      }}>\n        <Row gutter={[0, 16]}>\n          <Col span={24}>\n            <div className=\"title\">\n              Minesweeper\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </div>\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title={<div style={{ color: 'white' }}>Mine counter</div>}\n              value={this.props.flagCount}\n              prefix={<LikeOutlined />}\n              valueStyle={{ color: 'white' }}\n            />\n          </Col>\n          <Col span={12}>\n            <Timer\n              isEnded={this.props.isEnded}\n              doReset={this.props.doReset}\n            />\n          </Col>\n          <Col span={24}>\n              <Button type=\"primary\" shape=\"round\" size=\"large\"\n                      onClick={this.props.handleReset}\n                      style={{ width: '100px' }}\n              >\n                Reset\n              </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Panel\n","import React from 'react';\nimport './App.css';\nimport './Minesweeper.css'\nimport Field from \"./Field\";\nimport Panel from \"./Panel\";\nimport 'antd/dist/antd.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {flagCount: 10, isEnded: true, doReset: false}\n        this.updateGameStatus = this.updateGameStatus.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n    }\n\n    updateGameStatus(isEnded, flagCount) {\n        this.setState({flagCount: flagCount, isEnded: isEnded, doReset: false});\n    }\n\n    handleReset() {\n        this.setState({flagCount: 10, isEnded: true, doReset: true})\n    }\n\n    componentDidUpdate() {\n        if (this.state.doReset)\n            this.setState({doReset: false})\n    }\n\n    render() {\n        console.log(this.state.doReset);\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n            <div\n                        style={{margin: \"16px\"}}\n            >\n                    <Panel\n                        isEnded={this.state.isEnded}\n                        flagCount={this.state.flagCount}\n                        handleReset={this.handleReset}\n                        doReset={this.state.doReset}\n                    />\n            </div>\n                    <Field\n                        updateGameStatus={this.updateGameStatus}\n                        flagCount={this.state.flagCount}\n                        doReset={this.state.doReset}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}